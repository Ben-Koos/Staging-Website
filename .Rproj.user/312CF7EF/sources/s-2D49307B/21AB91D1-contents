---
title: Subreddit Sentiment Analysis
author: Ben Koos
date: '2020-07-12'
slug: subreddit-sentiment-analysis
categories: []
tags:
  - Sentiment-Analysis NLP Reddit
type: ''
subtitle: ''
image: ''
---


## Set of words 
Words words words Words words wordsWords words words Words words words Words words words Words words words Words words words Words words wordsWords words words Words words words Words words words Words words words Words words words Words words wordsWords words words Words words words Words words words Words words words Words words words Words words wordsWords words words Words words words Words words words Words words words Words words words Words words wordsWords words words Words words words Words words words Words words words Words words words Words words wordsWords words words Words words words Words words words Words words words  

```{r include = F}
require(ggplot2)
require(dplyr)
```

```{r echo = F}
load("C:\\Users\\Ben Koos\\Documents\\Projects\\Machine Learning\\Sentiment Analytics\\Reddit Comments\\Data\\Int\\20200620 T100Sub TM1000C\\20200620 T100Sub TM1000C.RData")

topSubsMeans = topSubs %>%  
  filter(NumWords>=30,N > 30) %>% 
  group_by(Subreddit) %>% 
  summarise( Polarity_weighted = weighted.mean(Polarity,Comment.Score),
             Polarity_mean     = mean(Polarity),
             Subjective_weightted = weighted.mean(Subjectivity, Comment.Score),
             Subjective_mean = mean(Subjectivity))

Subs = c( "news", "politics","wholesomememes",'aww',"gonewild")

topSubsMeans %>% 
  ggplot() + 
  geom_point(aes(x=reorder(Subreddit,Polarity_mean), y = Polarity_mean),
             size = 3) + 
  geom_bar(aes(x=reorder(Subreddit,Polarity_mean), y = Polarity_mean),
           size = .1, stat = "identity",width = .1,fill = '#c7cdb7') + 
  scale_x_discrete(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  theme(panel.background = element_blank(),
        panel.grid.major.y = element_line(color = 'grey',linetype = 'dashed'), 
        axis.text.y = element_text(color = 'grey'), 
        axis.ticks.y = element_blank(),
        axis.text.x = element_text(angle = 45,vjust = .69,color ='#936060',face='bold'), 
        axis.ticks.length = unit(1, "cm")) + 
  labs(x = "Subreddit", y = "Average Comment Sentiment" )
```


```{r message = F}

topSubsSubDaily = topSubs %>% 
  group_by(Subreddit, Day) %>% 
  filter(NumWords>=30) %>% 
  summarise( Polarity_weighted = weighted.mean(Polarity,Comment.Score),
             Polarity_mean = mean(Polarity)) %>% 
  mutate(Date = as.Date(as.numeric(Day), origin = "2016-01-01")  )

topSubsSubDaily %>% 
  filter(Subreddit %in% Subs) %>% 
  ggplot() + 
  geom_smooth(aes(x=Date,y = Polarity_mean,group=Subreddit,color=Subreddit),
            size =1.6 , se = F) +
  geom_line(aes(x=Date, y = Polarity_mean,group=Subreddit, color = Subreddit),
            size =.6,alpha = .5 ) +
  scale_colour_brewer(palette = "Set1") +
  theme(panel.background = element_blank(),
        panel.grid.major = element_line(color = 'grey',linetype = 'dashed'),
        axis.text = element_text(color ='#4a4947',face='bold'))
```

```{r echo = F}
topSubs %>% 
  filter(Subreddit %in% Subs, NumWords>=30) %>% 
  ggplot() + 
  stat_ecdf(aes(Polarity, color = Subreddit), size = 1.6) + 
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + 
  scale_colour_brewer(palette = "Set1") + 
  theme(panel.background = element_blank(),
        panel.grid.major = element_line(color = 'grey',linetype = 'dashed'),
        axis.text = element_text(color ='#4a4947',face='bold')) + 
  labs(x="Sentiment Score",y="Cumulative Probability")
```


```{r echo = F}
topSubs %>% 
  filter(Subreddit %in% Subs, NumWords>=30) %>% 
  filter(NumWords>=30) %>% 
  ggplot() + 
  geom_bar(aes(x=SentCat, fill=Subreddit), alpha = .7) + 
  scale_x_discrete(expand = c(0,0) , labels = c("Ext. Neg","Very Neg.","Neg.",'Somewhat Neg.','Neutral',
                                                'Somewhat Pos.','Pos.','Very Pos.',"Ext. Pos")) + 
  scale_y_continuous(expand = c(0,0), labels = scales::comma ) +
  scale_fill_brewer(palette = "Set1") + 
  theme(axis.text.x = element_text(angle = 45)) + 
  facet_wrap(~Subreddit,scales = "free")

```